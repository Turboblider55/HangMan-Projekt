import './index.css';
import Letters  from './compontents/Letters';
import Restart from './compontents/Restart';
import HangMan from './compontents/HangMan';
import SecretWord from './compontents/SecretWord';
import { useEffect, useState } from 'react';
import Modal from './compontents/Modal';
import { useQuery } from 'react-query';
import { RandomWord } from './compontents/RandomWord';
function App() {

  const [modal, setModal] = useState(false);
  //A kital√°land√≥ sz√≥
  const [WordToFind,SetWordToFind] = useState("");
  //A hib√°k sz√°ma
  const [WrongLetter,SetWrongLetter] = useState(0);
  //Az eltal√°lt bet≈±k
  const [FoundLetters,SetFoundLetters] = useState([]);
  //A v√©g√©n felugr√≥ modal sz√∂vege
  const [Text,SetText] = useState({});
  //A j√°t√©kmenet √°llapota
  const [GameOver,SetGameOver] = useState(true)
  //A v√©letlen k√©rt sz√≥
  let {data,status} = useQuery(['RandomWord',GameOver],RandomWord);
  //A j√°t√©k √∫jraind√≠t√°sa
  const ResetHangMan = () => {
    SetGameOver(true);
    SetWrongLetter(0);
    SetFoundLetters([]);
  }
  useEffect(()=>{
    //Ha a hib√°k sz√°ma el√©ri a tized, a j√°t√©kos vesz√≠t, a j√°t√©knak v√©ge
    if(WrongLetter === 10){
      SetText({msg:"Sajn√°lom üò•! Ez nem j√∂tt √∂ssze",word:WordToFind});
      setModal(true);
      SetGameOver(true)
      ResetHangMan();
      //Ha a megtal√°lt bet≈±k hossza megegyezik a kital√°land√≥ sz√≥ egyedi bet≈±inek hossz√°val a j√°t√©kos gy≈ëz, a j√°t√©knak v√©ge
    }else if([...new Set([...WordToFind.toUpperCase()])].length === FoundLetters.length && GameOver === false){
      SetText({msg:"Wow üòÄ! Sz√©p Munka. √ñsszesen "+WrongLetter+" db hib√°t ejtett√©l.",word:WordToFind});
      setModal(true);
      SetGameOver(true);
      ResetHangMan();
    }
    //Ha a k√©rt v√©letlen sz√≥ sikeresen meg√©rkezett, akkor az lesz a megtal√°land√≥ sz√≥
    if(status==='success'){
      SetWordToFind(data.data[0].word)
      SetGameOver(false)
    }
      
  })

  return (
    <div className="App">
      <h3 className='text-white'>Hangman</h3>
      <HangMan WrongLetter={WrongLetter}/>
      <SecretWord SecretWord={WordToFind} FoundLetters = {FoundLetters}/>
      <Letters WrongLetter = {WrongLetter} SetWrongLetter = {SetWrongLetter}  WordToFind = {WordToFind} FoundLetters={FoundLetters} SetFoundLetters={SetFoundLetters}/>
      <Restart ResetHangMan = {ResetHangMan}/>
      <Modal modal={modal} setModal = {setModal} Text={Text}/>
    </div>
  );
}

export default App;
